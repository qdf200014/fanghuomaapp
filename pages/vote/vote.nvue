<template>
    <view class="flex flex-1 flex-column w-100" :style="'background-color: '+(voteType==2?'#F4F5FB;':'#FFFFFF;')">
        <uni-nav-bar v-if="voteType != 2" left-icon="back" :title="voteConfig.headTitle" :statusBar="true">
            <view class="flex flex-1 justify-end" v-if="isLookDetail" slot="right">
                <image src="../../static/fireIndex/share.png" style="width: 36rpx;height: 36rpx;margin-left: 36rpx;" @click="clickRight"></image>
            </view>
        </uni-nav-bar>
        <view v-else style="height: 502rpx;background-image: linear-gradient(to bottom, #2594FF, #F4F5FB);" class="w-100"></view>
        <list class="flex flex-1 flex-column w-100" v-if="voteType != 2">
            <cell class="flex flex-column w-100">
                <view class="p-3 w-100">
                    <text style="font-size: 46rpx;font-weight: 600;color: #323234;">{{voteInfo.title || ''}}</text>
                </view>
                <!-- 头部信息 -->
                <view class="w-100 px-3 flex flex-row justify-between align-center">
                    <view class="flex flex-row flex-1 justify-start align-center">
                        <text class="font-weight-normal" style="color: #949599;font-size: 26rpx;">{{voteConfig.initiater}}</text>
                        <view>
                            <view v-if="voteInfo.userAvatar">
                                <image :src="voteInfo.userAvatar || ''" style="width: 90rpx;height: 90rpx;border-radius: 45rpx;"></image>
                            </view>
                            <view class="defaultHead" v-else>
                                <text class="headName">{{voteInfo.userName.charAt(voteInfo.userName.length-2)+voteInfo.userName.charAt(voteInfo.userName.length-1)}}</text>
                            </view>
                        </view>
                        <text class="font-weight-normal" style="color: #949599;font-size: 26rpx;padding-left: 16rpx;">{{voteInfo.userName || ''}}</text>
                    </view>
                    <image :src="'/static/img/vote/'+(voteStatus == 3?'ending':'voting')+'.png'" style="width: 140rpx;height: 56rpx;"></image>
                </view>
 
                <!-- 规则 -->
                <view class="w-100 p-3 flex flex-row justify-between border-bottom">
                    <view class="flex flex-row justify-start">
                        <text class="theme-second-color" style="font-size: 32rpx;font-weight: 500;">{{voteConfig.rule}}</text>
                    </view>
                    <view class="flex flex-column flex-1 align-start">
                        <!-- <text class="font-4 font-weight-normal" style="font-size: 28rpx;color: #323234;">{{userinfo.introduce}}</text> -->
                        <view class="flex flex-row" style="padding-bottom: 40rpx;padding-top: 7rpx;">
                            <text class="font-weight-normal" style="font-size: 28rpx;color: #323234;width: 180rpx;">开始时间：</text>
                            <text class="font-weight-normal" style="font-size: 28rpx;color: #323234;">{{voteInfo.startTime}}</text>
                        </view>
                        <view class="flex flex-row"  style="padding-bottom: 40rpx;">
                            <text class="font-weight-normal" style="font-size: 28rpx;color: #323234;width: 180rpx;">结束时间：</text>
                            <text class="font-weight-normal" style="font-size: 28rpx;color: #323234;">{{voteInfo.endTime}}</text>
                        </view>
                        <view class="flex flex-row">
                            <text class="font-weight-normal" style="font-size: 28rpx;color: #323234;width: 180rpx;">规则：</text>
                            <text class="font-weight-normal" style="font-size: 28rpx;color: #323234;">{{ruleText}}</text>
                        </view>
                    </view>
                </view>
 
                <!-- 投票详情： -->
                <view class="w-100 p-3 flex flex-row justify-between align-start border-bottom">
                    <view class="flex flex-row justify-center align-center" style="width: 160rpx;">
                        <view class=" flex flex-column align-end align-center">
                            <text class="theme-second-color" style="font-size: 32rpx;font-weight: 500;">{{voteConfig.info}}</text>
                            <text class="font-weight-normal right-0" style="color: #949599;font-size: 26rpx;">{{voteInfo.type ? '（多选）' :'（单选）'}}</text>
                        </view>
                    </view>
                    <view class="flex flex-column flex-1 align-start">
                        <text class="font-4 font-weight-normal" style="font-size: 28rpx;color: #323234; line-height: 44rpx;">{{voteInfo.introduce}}</text>
                    </view>
                </view>
 
                <!-- 选项 -->
                <view class="w-100 py-3 flex flex-column justify-between align-start border-bottom" v-for="(item, index) in voteInfo.optionsList"
                 :key="index">
                    <view class="flex flex-row justify-start align-center w-100 px-3" @click="checkItem(item, index)">
                        <radio :disabled="voteStatus!=1" :checked="item.isChecked" @change="changeCheck"/>
                        <view class="flex-1">
                            <text class="font-weight-normal-2" style="font-size: 32rpx;color: #333333;padding-left: 81rpx;">{{item.optionsText}}</text>
                        </view>
                        <text v-if="voteStatus>1" class="font-weight-normal" style="font-size: 28rpx;color: #323234;">{{item.optionsNum}}{{voteConfig.unit}}</text>
                    </view>
                    <!-- 如果是投票发起人才显示 -->
                    <view  class="flex flex-row w-100 px-3 justify-end align-center" style="margin-top: 32rpx;" v-if="userId == voteInfo.userId">
                        <view v-for="(user, uIndex) in item.userInfo.slice(0,3)" @click="govotepeople(index)" :key="uIndex+user.userId" style="margin-left: 16rpx;">
                            <view v-if="user.userAvatar">
                                <image :src="user.userAvatar" class="option-user-icon"></image>
                            </view>
                            <view class="defaultHead1" v-else>
                                <text class="headName1">{{user.userName.charAt(user.userName.length-2)+user.userName.charAt(user.userName.length-1)}}</text>
                            </view>
                        </view>
                        <view v-if="item.userInfo.length>=2" @click="govotepeople(index)" style="margin-left: 20rpx;">
                            <image src="../../../static/work/more.png" style="width: 40rpx;height: 10rpx;"></image>
                        </view>
                    </view>
                </view>
            </cell>
        </list>
        
        <!-- 会商结论页面 -->
        <list v-else class="position-absolute top-0 left-0 right-0 bottom-128">
            <cell class="position-relative" v-if="voteType==2">
                <uni-nav-bar left-icon="back" color="#ffffff" :title="voteConfig.headTitle" :border="false" :fixed="true" :statusBar="true" backgroundColor="transparent"></uni-nav-bar>
            </cell>
            <cell class="flex flex-column w-100">
                <view class="p-3 w-100">
                    <view class="position-relative bg-white p-3 rounded-2 shadow">
                        <!-- 标题 -->
                        <image :src="'/static/img/vote/status2'+voteStatus+'.png'" style="width: 104rpx;height: 40rpx;top: 40rpx;left: 30rpx;" class="position-absolute"></image>
                        <text style="font-size: 40rpx;font-weight: 600;color: #323234;">&#8195;&#8195;&#8195;{{voteInfo.title || ''}}</text>
                        
                        <!-- 结论详情 -->
                        <text class="font-2 text-muted py-3 border-bottom" style="line-height: 44rpx;">{{voteInfo.introduce}}</text>
                        
                        <!-- 规则 -->
                        <view class="flex flex-row justify-between pt-3">
                            <view class="flex flex-row justify-start">
                                <text class="font">{{voteConfig.rule}}</text>
                            </view>
                            <view class="flex flex-column flex-1 align-end">
                                <view class="flex flex-row pb-2">
                                    <text class="font-weight-normal font" style="color: #323234; font-size: 28rpx; font-weight: 500;">开始时间 </text>
                                    <text class="font-weight-normal font" style="color: #323234; font-size: 28rpx; font-weight: 500;">{{voteInfo.startTime}}</text>
                                </view>
                                <view class="flex flex-row">
                                    <text class="font-weight-normal font" style="color: #323234; font-size: 28rpx; font-weight: 500;">结束时间 </text>
                                    <text class="font-weight-normal font" style="color: #323234; font-size: 28rpx; font-weight: 500;">{{voteInfo.endTime}}</text>
                                </view>
                            </view>
                        </view>
                        
                        <!-- 发起人 -->
                        <view class="flex flex-row justify-between align-center pt-4">
                            <text class="font">{{voteConfig.initiater}}</text>
                            <view class="flex flex-row flex-1 justify-start align-center justify-end">
                                <view>
                                    <view v-if="voteInfo.userAvatar">
                                        <image :src="voteInfo.userAvatar || ''" style="width: 56rpx;height: 56rpx;border-radius: 45rpx;"></image>
                                    </view>
                                    <view class="defaultHead" v-else>
                                        <text class="headName">{{voteInfo.userName.charAt(voteInfo.userName.length-2)+voteInfo.userName.charAt(voteInfo.userName.length-1)}}</text>
                                    </view>
                                </view>
                                <text class="font-weight-normal font pl-1" style="color: #323234;">{{voteInfo.userName || ''}}</text>
                            </view>
                        </view>
                    </view>
                    
                    <view class="position-relative bg-white px-3 rounded-2 shadow" style="margin-top: 24rpx;" >
                        <!-- 选项 -->
                        <text class="font-weight-normal-2 pt-3" style="font-size: 32rpx;color: #333333; line-height: 32rpx;">是否同意会商结论</text>
                        <view class=" py-3 flex flex-column justify-between align-start" v-if="item.optionsIndex == -1 ? acknowledged : true" :class="(index == voteInfo.optionsList.length-1)?'':'border-bottom'" v-for="(item, index) in voteInfo.optionsList"
                         :key="index">
                            <view class="flex flex-row justify-start align-center w-100" style="width: 630rpx;" @click="checkItem(item, index)">
                                <view style="width: 50rpx;">
                                    <radio :disabled="voteStatus!=1" v-if="index == voteInfo.optionsList.length-1 ? false : true" :checked="item.isChecked"/>
                                </view>
                                <view class="flex-1">
                                    <text class="font-weight-normal-2 pl-5" style="font-size: 32rpx;color: #333333; line-height: 32rpx;">{{item.optionsText}}</text>
                                </view>
                                <text v-if="voteStatus>1" class="font-weight-normal" style="font-size: 28rpx;color: #323234;">{{item.optionsNum}}{{voteConfig.unit}}</text>
                            </view>
                            <view  class="flex flex-row justify-end align-center" style="width: 630rpx;">
                                <view v-for="(user, uIndex) in item.userInfo.slice(0,3)" @click="govotepeople(index)" v-if="acknowledged" :key="uIndex+user.userId" style="margin-left: 16rpx;">
                                    <view v-if="user.userAvatar">
                                        <image :src="user.userAvatar" class="option-user-icon"></image>
                                    </view>
                                    <view class="defaultHead1" v-else>
                                        <text class="headName1">{{user.userName.charAt(user.userName.length-2)+user.userName.charAt(user.userName.length-1)}}</text>
                                    </view>
                                </view>
                                <view v-if="item.userInfo.length>=2" @click="govotepeople(index)" style="margin-left: 20rpx;">
                                    <image src="/static/work/more.png" style="width: 40rpx;height: 10rpx;"></image>
                                </view>
                            </view>
                        </view>
                    </view>
                </view>
            </cell>
        </list>
        <view class="bottom-btn-box flex justify-center align-center shadow" v-if="!isLookDetail" :class="voteType==2?'position-absolute left-0 bottom-0':''" :style="'background-color: '+(voteType==2?'#F4F5FB;':'#FFFFFF;')">
            <view class="bottom-btn flex justify-center align-center" :style="'background-color:'+voteConfig.createdBtnColor+';'" :class="voteStatus == 1 ? '' :'disable-bg'" :hover-class="voteStatus == 1 ? 'hover-8' : ''"
             @click="createVote(index,item)">
                <text class="font-2 font-weight-bold" style="color: #FFFFFF;">{{btnText}}</text>
            </view>
        </view>
    </view>
</template>
 
<script>
    import getPercent from '@/utils/getPercent.js';
    import dayjs from 'dayjs';
    import voteConfigs from './voteConfigs.js';
    import deepClone from '@/utils/js-deep-clone';
    import { mapGetters, mapActions } from 'vuex';
    export default {
        data() {
            return {
                voteType:0,    // 投票类型 [ 0投票 | 1表决 | 2结论 ]
                voteBack: null,
                voteId: '',
                isLookDetail:false,
                voteInfo: {},
                consId: '',
                voteList:{},
                acknowledged: false,
                userId:0,
				checkedList:[]
            }
        },
        computed: {
            voteStatus() {
                let _status = 0,
                _stime = dayjs(this.voteInfo.startTime).valueOf(),
                _etime = dayjs(this.voteInfo.endTime).valueOf(),
                _ctime = dayjs(new Date()).valueOf();
                if (_ctime < _stime) {
                    _status = 0; //状态 0未开始 1未投票 2已投票 3已结束
                }else {
                    _status = this.voteInfo.status ? 2 : 1;
                }
                return _status;
            },
            voteConfig(){
                let list = deepClone(voteConfigs);
                return list[this.voteType];
            },
            ruleText(){
                let rtxt = '';
                if(this.voteInfo.type){
                    rtxt = `每人最少${this.voteInfo.leastVote}票，最多${this.voteInfo.mostVote}票`;
                } else {
                    rtxt = '每人仅限1票';
                }
                return rtxt;
            },
            btnText() {
                return this.voteConfig.infoBtn[this.voteStatus];
            },
            
            ...mapGetters({
                userInfo: 'user/info'
            })
        },
        filters: {
            formatPercent(num, total) {
                return getPercent(num, total);
            },
            formatProgress(num, total) {
                return getPercent(num, total).replace('%');
            }
        },
        onLoad(event) {
            
            console.log('event', event);
            this.voteId = event.voteId;
            if(event.voteType){
                this.voteType = event.voteType;
            }
            if(event.lookDetail){
                this.isLookDetail = (event.lookDetail == '1');
            }
            console.log('this.isLookDetail_', this.isLookDetail);
            this.getVote();
            this.initPage();
        },
        onUnload() {
            clearTimeout(this.voteBack);
            // uni.$off('im-selectContactOk');
            this.voteBack = null;
        },
        onShow(){
            this.workbenchList();
        },
        methods: {
			changeCheck(e){
				console.log(e)
			},
            ...mapActions({
                getUserInfo: 'user/getUserInfo',
                initNim: 'initNim/initNimSDK'
            }),
            workbenchList(){
                let userInfo = this.userInfo;
                console.log(userInfo,'用户信息')
                this.userId = userInfo.userId;
            },
            clickRight() {
                uni.navigateTo({
                    url: '/pages/easy-chat/select-contact?title=' + this.voteInfo.title,
                    animationType: 'slide-in-bottom'
                })
            },
            initPage() {
                uni.$off('im-selectContactOk');
                let _self = this
                uni.$on('im-selectContactOk', (data) => {
                    this.$nextTick(function() {
                        // 发送一个投票消息
                        let votes_content = {
                            type: 'votes',
                            data: {
                                // 跳转的地址
                                url: '/pages/vote/vote?voteId=' + this.voteId,
                                // 标题
                                title: '# ' + this.voteInfo.title,
                                // 详细内容
                                detail: this.voteInfo.introduce,
                                // 封面
                                cover: '/static/easy-chat/other/votes@2x.png'
                            }
                        };
            
                        data.map(item => {
                            _self.$store.dispatch('initNim/nimSendCustomMsg', {
                                scene: item.scene,
                                to: item.to,
                                content: JSON.stringify(votes_content)
                            });
                        })
            
            
                        uni.showToast({
                            title: '分享成功',
                            icon: 'none'
                        })
                    })
                    console.log('selectContactOk', data)
                })
            },
            getVote() {
                uni.$api.vote.getvotedetail({
                        voteId: this.voteId
                    })
                    .then(res => {
                        console.log('getvotedetail_RES', res);
                        let data = res.data.data;
                        this.voteList = res.data.data
                        this.consId = res.data.data.consId
                        if(this.voteList.status == 1){
                            this.acknowledged = true
                        }
                        if(data.voteId == null){
                            uni.showToast({
                                title: `该${this.voteConfig.name}已被删除`,
                                icon: 'none'
                            });
                            return this.voteBack = setTimeout(()=>{
                                uni.navigateBack();
                            }, 500);
                        }
                        data.optionsList.forEach(item => {
                            item.isChecked = item.isChecked || false
                        });
                        // data.status = 0;
                        this.voteInfo = data;
                        // console.log(this.voteInfo)
                        // console.log(this.voteInfo.optionsList[0].userInfo.length)
                        // if(this.voteInfo.optionsList[0].userInfo.length > 0 || this.voteInfo.optionsList[1].userInfo.length > 0){
                        //     this.acknowledged = true
                        // }
                    })
                    .catch(err => {
                        console.log('getvotedetail_ERR', err);
                    });
            },
            checkItem(item, index) {
				console.log('11111111111111111')
                if (this.voteStatus == 1) {
                    // if (item.isChecked == true) { // 取消选中
                    //     this.voteInfo.optionsList[index].isChecked = false;
                    //     return false;
                    // }
                    if (this.voteInfo.type) { //  多选
					    console.log(item,'卡啊啊喀喀喀')
					    this.voteInfo.optionsList[index].isChecked = ! this.voteInfo.optionsList[index].isChecked
					    console.log(this.voteInfo.optionsList,'kakakka ')
						let checkSelect = [];
						this.voteInfo.optionsList.map(item=>{
							if(item.isChecked == true){
								checkSelect.push(item)
							}
							
						})
						console.log(checkSelect,'=============')
						this.checkedList = checkSelect;
 
                    } else { // 单选
                        (this.voteInfo.optionsList.forEach(item => {item.isChecked = false}),this.voteInfo.optionsList[index].isChecked = true);
                    }
 
                }
            },
            createVote(){
                // 投票  判断是否可以进行投票
                if(this.voteStatus == 1){
                    let _checkedList = this.voteInfo.optionsList.map((item, index) => item.isChecked ? index : -1).filter(item=>item>=0), minVote = 1;
                    if(this.voteInfo.type){
                        if(_checkedList.length<this.voteInfo.leastVote) return uni.showToast({
							    title: `最少选中${this.voteInfo.leastVote}项`,
							    icon: 'none'
							});
						console.log(this.checkedList.length,'lalalallalallaalal')
						if(this.checkedList.length > this.voteInfo.mostVote) return uni.showToast({
								title: `最少选中${this.voteInfo.mostVote}项`,
								icon: 'none'
							})
						
                    }else{
                        if(_checkedList.length<=0)return uni.showToast({
                            title: `最少选中${minVote}项`,
                            icon: 'none'
                        });
                    }
                    this.voteInfo.status = true;
                    uni.$api.vote.castvote({
                        voteId:this.voteId,
                        optionsArr:_checkedList
                    })
                    .then(res=>{
                        console.log('castvote_RES', res);
                        let msg = '';
                        if(res.data.statusCode == 200){
                            msg = `${this.voteConfig.active}成功`;
                            this.acknowledged = true
                            this.getVote();
                        } else {
                            this.acknowledged = true
                            msg = res.data.message || '操作失败'
                        };
                        uni.showToast({
                            title: msg,
                            icon: 'none'
                        });
                    })
                    .catch(err=>{
                        console.log('castvote_ERR', err);
                    });
                }
            },
            // 跳到参与人详情
            govotepeople(index){
                console.log(index)
                uni.navigateTo({
                    url:'./participant/participant?option='+this.voteList.optionsList[index].optionsIndex+'&voteId='+this.voteId + '&souteType=' + 0 
                    + '&consId=' + this.consId +'&title=' + this.voteConfig.headTitle
                    
                })
            }
        }
    }
</script>
 
<style>
    .option-user-icon {
        width: 56rpx;
        height: 56rpx;
        border-radius: 28rpx;
        margin: 0 5rpx;
    }
 
    .bottom-btn-box {
        width: 750rpx;
        height: 142rpx;
        /* background-color: #FFFFFF;
        box-shadow: 0px -8px 14px 0px rgba(169, 169, 169, 0.07), 0px 1px 0px 0px #E5E5E5; */
    }
 
    .bottom-btn {
        width: 286rpx;
        height: 82rpx;
        background-color: #F75252;
        border-radius: 44rpx;
    }
    .bottom-030 {
        bottom: -30rpx;
    }
    .bottom-128{
        bottom: 128rpx;
    }
 
    .disable-bg {
        width: 286rpx;
        height: 82rpx;
        border-radius: 41px;
        opacity: 0.7;
        background-color: #E1E4ED;
    }
    .defaultHead {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 56rpx;
        height: 56rpx;
        background-color: #F75252;
        border-radius: 200;
        border-width: 4rpx;
        border-style: solid;
        border-color: rgba(255, 196, 196, 0.67);
    }
    .defaultHead1{
            display: flex;
            justify-content: center;
            align-items: center;
            width: 56rpx;
            height: 56rpx;
            background-color: #F75252;
            border-radius: 200;
            border-width: 4rpx;
            border-style: solid;
            border-color: rgba(255, 196, 196, 0.67);
        }
    .headName {
        font-size: 22rpx;
        font-weight: 400;
        color: #FFFFFF;
    }
    .headName1 {
            font-size: 20rpx;
            font-weight: 400;
            color: #FFFFFF;
        }
</style>
